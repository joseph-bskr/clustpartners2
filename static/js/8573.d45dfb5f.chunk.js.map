{"version":3,"file":"static/js/8573.d45dfb5f.chunk.js","mappings":"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","sources":["../../components/src/grid/container.tsx","../../components/src/ui/image/image.tsx","../../components/src/ui/image/style.tsx","../../components/src/ui/media/media-body.tsx","../../components/src/ui/media/media.tsx","../../components/src/ui/media/style.tsx","components/widgets/people-may-know/style.tsx","components/widgets/people-may-know/index.tsx","components/widgets/people-viewed/style.tsx","components/widgets/people-viewed/index.tsx","components/widgets/stories/style.tsx","components/widgets/stories/index.tsx","components/widgets/widget-title/style.tsx","components/widgets/widget-title/index.tsx"],"sourcesContent":["import { SpaceProps } from \"@doar/shared/styled\";\nimport { StyledContainer } from \"./style\";\n\ninterface IProps extends SpaceProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nconst Container = ({ className, ...props }: IProps) => {\n  return <StyledContainer className={className} {...props} />;\n};\n\nexport default Container;\n","import classnames from \"clsx\";\nimport { SpaceProps, LayoutProps } from \"@doar/shared/styled\";\nimport { StyledImage } from \"./style\";\n\nexport interface ImageProps extends SpaceProps, LayoutProps {\n  /**\n   * image's source.\n   */\n  src: string;\n  /**\n   * image's alt text.\n   */\n  alt?: string;\n  /**\n   * image's shapes\n   */\n  shape?: \"rounded\" | \"circle\" | \"thumbnail\";\n\n  /**\n   *Use the `fluid` to scale image nicely to the parent element.\n   */\n  fluid?: boolean;\n  /**\n   *Use the `align` to align image.\n   */\n  align?: \"left\" | \"right\";\n  /**\n   *Use the `fit` to resized to fit image's container.\n   */\n  fit?: \"cover\" | \"contain\";\n  /**\n   * Optional. Extra Class Name\n   */\n  className?: string;\n}\n\nconst Image = ({\n  src,\n  alt,\n  size,\n  shape,\n  fluid,\n  align,\n  fit,\n  className,\n  ...restProps\n}: ImageProps) => {\n  return (\n    <StyledImage\n      src={src}\n      alt={alt}\n      $shape={shape}\n      $size={size}\n      $fluid={fluid}\n      $align={align}\n      $fit={fit}\n      className={classnames(className)}\n      {...restProps}\n    />\n  );\n};\n\nexport default Image;\n","/* eslint-disable jsx-a11y/alt-text */\nimport styled, {\n  space,\n  layout,\n  flexbox,\n  SpaceProps,\n  LayoutProps,\n  FlexboxProps,\n  device,\n  css,\n  themeGet,\n} from \"@doar/shared/styled\";\n\ninterface ImageProps extends SpaceProps, LayoutProps {\n  $shape?: \"rounded\" | \"circle\" | \"thumbnail\";\n  $fluid?: boolean;\n  $align?: \"left\" | \"right\";\n  $fit?: \"cover\" | \"contain\";\n}\n\nconst imageCss = css<ImageProps>`\n  max-width: 100%;\n  ${({ $shape }) =>\n    $shape === \"rounded\" &&\n    css`\n      border-radius: ${themeGet(\"radii.rounded\")};\n    `}\n  ${({ $shape }) =>\n    $shape === \"circle\" &&\n    css`\n      border-radius: ${themeGet(\"radii.circle\")};\n    `}\n\t${({ $shape }) =>\n    $shape === \"thumbnail\" &&\n    css`\n      padding: 0.25rem;\n      background-color: transparent;\n      border: 1px solid ${themeGet(\"colors.text4\")};\n      border-radius: ${themeGet(\"radii.rounded\")};\n    `}\n\t${({ $fluid }) =>\n    $fluid &&\n    css`\n      height: auto;\n    `}\n\t${({ $align }) =>\n    $align === \"left\" &&\n    css`\n      float: left;\n    `}\n\t${({ $align }) =>\n    $align === \"right\" &&\n    css`\n      float: right;\n    `}\n\t\n\t${({ $fit }) =>\n    $fit === \"cover\" &&\n    css`\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n    `}\n\t${({ $fit }) =>\n    $fit === \"contain\" &&\n    css`\n      width: 100%;\n      height: 100%;\n      object-fit: contain;\n    `}\n    ${space};\n  ${layout};\n`;\n\nexport const StyledImage = styled(\n  ({\n    m,\n    mx,\n    my,\n    ml,\n    mr,\n    mt,\n    mb,\n    maxWidth,\n    maxHeight,\n    width,\n    height,\n    display,\n    ...rest\n  }) => <img {...rest} />\n)<ImageProps>`\n  ${imageCss}\n`;\n\ninterface IGroup extends FlexboxProps, SpaceProps {\n  $size?: \"sm\";\n}\n\nconst groupCss = css<IGroup>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  img {\n    position: relative;\n    background-color: #fff;\n    ${device.small} {\n      padding: 3px;\n    }\n    ${(props) =>\n      props.theme.name === \"dark\" &&\n      css`\n        background-color: ${themeGet(\"colors.gray900\")};\n      `}\n  }\n  ${({ $size }) =>\n    (!$size || $size !== \"sm\") &&\n    css`\n      img {\n        &:not(:first-of-type) {\n          margin-left: -15px;\n        }\n        ${device.small} {\n          &:not(:first-of-type) {\n            margin-left: -25px;\n          }\n        }\n      }\n    `}\n  ${({ $size }) =>\n    $size === \"sm\" &&\n    css`\n      img {\n        &:not(:first-of-type) {\n          margin-left: -15px;\n        }\n      }\n    `}\n    ${(props) =>\n    props.theme.name === \"dark\" &&\n    css`\n      img {\n        background-color: ${themeGet(\"gray900\")};\n      }\n    `}\n    ${flexbox};\n  ${space};\n`;\n\nexport const StyledGroup = styled(\n  ({ mb, alignItems, justifyContent, ...rest }) => <div {...rest} />\n)<IGroup>`\n  ${groupCss};\n`;\n","import classnames from \"clsx\";\nimport { SpaceProps } from \"@doar/shared/styled\";\nimport { StyledMediaBody } from \"./style\";\n\ninterface IMediaBodyProps extends SpaceProps {\n  className?: string;\n  children: React.ReactNode;\n}\n\nconst MediaBody = ({ children, className, ...restProps }: IMediaBodyProps) => {\n  return (\n    <StyledMediaBody\n      className={classnames(className, \"media-body\")}\n      {...restProps}\n    >\n      {children}\n    </StyledMediaBody>\n  );\n};\n\nexport default MediaBody;\n","import classnames from \"clsx\";\nimport { SpaceProps, FlexboxProps, LayoutProps } from \"@doar/shared/styled\";\nimport { StyledMedia } from \"./style\";\n\ninterface IMediaProps extends SpaceProps, FlexboxProps, LayoutProps {\n  as?: React.ElementType;\n  className?: string;\n  children: React.ReactNode;\n}\n\nconst Media = ({ children, as, className, ...restProps }: IMediaProps) => {\n  return (\n    <StyledMedia\n      className={classnames(className, \"media\")}\n      as={as}\n      $el={as}\n      {...restProps}\n    >\n      {children}\n    </StyledMedia>\n  );\n};\n\nexport default Media;\n","import styled, {\n  layout,\n  space,\n  flexbox,\n  css,\n  SpaceProps,\n  LayoutProps,\n  FlexboxProps,\n} from \"@doar/shared/styled\";\n\ninterface IMedia extends SpaceProps, FlexboxProps, LayoutProps {\n  $el: string;\n}\n\nexport const StyledMedia = styled(\n  ({ m, ml, mr, mt, mb, display, alignItems, $el, ...props }) => (\n    <div {...props} />\n  )\n)<IMedia>`\n  ${({ $el }) =>\n    $el !== \"ul\" &&\n    css`\n      display: flex;\n      align-items: flex-start;\n    `}\n  ${layout};\n  ${space};\n  ${flexbox};\n`;\n\ninterface IMediaLeft extends SpaceProps, LayoutProps {}\n\nexport const StyledMediaLeft = styled(({ width, mr, ml, ...props }) => (\n  <div {...props} />\n))<IMediaLeft>`\n  ${layout};\n  ${space};\n  ${(props) =>\n    props.$alignMent === \"middle\" &&\n    css`\n      align-self: center;\n    `}\n  ${(props) =>\n    props.$alignMent === \"end\" &&\n    css`\n      align-self: flex-end;\n    `}\n    img {\n    max-width: 100%;\n  }\n`;\n\nexport const StyledMediaBody = styled(\n  ({ width, m, mr, ml, mt, mb, px, ...props }) => <div {...props} />\n)<SpaceProps>`\n  ${space};\n  flex: 1;\n`;\n","import styled, { themeGet } from \"@doar/shared/styled\";\n\nexport const StyledName = styled.p`\n  font-weight: 500;\n  margin-bottom: 0px;\n`;\n\nexport const StyledRole = styled.span`\n  font-size: 12px;\n  color: ${themeGet(\"colors.text3\")};\n`;\n","import { Media, MediaBody, Anchor, Avatar } from \"@doar/components\";\nimport image1 from \"@doar/shared/images/img21.jpg\";\nimport image2 from \"@doar/shared/images/img22.jpg\";\nimport image3 from \"@doar/shared/images/img23.jpg\";\nimport image4 from \"@doar/shared/images/img24.jpg\";\nimport WidgetTitle from \"../widget-title\";\nimport { StyledName, StyledRole } from \"./style\";\n\nconst PeopleMayKnow = () => {\n  return (\n    <>\n      <WidgetTitle title=\"People You May Know\" />\n      <Media as=\"ul\" mb=\"15px\">\n        <Media as=\"li\" alignItems=\"center\">\n          <Anchor path=\"#!\">\n            <Avatar>\n              <img src={image1} alt=\"avatar\" />\n            </Avatar>\n          </Anchor>\n          <MediaBody ml=\"15px\">\n            <StyledName>\n              <Anchor path=\"#!\" color=\"text\">\n                Allan Ray Palban\n              </Anchor>\n            </StyledName>\n            <StyledRole>Senior Business Analyst</StyledRole>\n          </MediaBody>\n        </Media>\n        <Media as=\"li\" alignItems=\"center\" mt=\"15px\">\n          <Anchor path=\"#!\">\n            <Avatar>\n              <img src={image2} alt=\"avatar\" />\n            </Avatar>\n          </Anchor>\n          <MediaBody ml=\"15px\">\n            <StyledName>\n              <Anchor path=\"#!\" color=\"text\">\n                Rhea Castanares\n              </Anchor>\n            </StyledName>\n            <StyledRole>Product Designer</StyledRole>\n          </MediaBody>\n        </Media>\n        <Media as=\"li\" alignItems=\"center\" mt=\"15px\">\n          <Anchor path=\"#!\">\n            <Avatar>\n              <img src={image3} alt=\"avatar\" />\n            </Avatar>\n          </Anchor>\n          <MediaBody ml=\"15px\">\n            <StyledName>\n              <Anchor path=\"#!\" color=\"text\">\n                Philip Cesar Galban\n              </Anchor>\n            </StyledName>\n            <StyledRole>Executive Assistant</StyledRole>\n          </MediaBody>\n        </Media>\n        <Media as=\"li\" alignItems=\"center\" mt=\"15px\">\n          <Anchor path=\"#!\">\n            <Avatar>\n              <img src={image4} alt=\"avatar\" />\n            </Avatar>\n          </Anchor>\n          <MediaBody ml=\"15px\">\n            <StyledName>\n              <Anchor path=\"#!\" color=\"text\">\n                Randy Macapala\n              </Anchor>\n            </StyledName>\n            <StyledRole>Business Entrepreneur</StyledRole>\n          </MediaBody>\n        </Media>\n        <Media as=\"li\" alignItems=\"center\" mt=\"15px\">\n          <Anchor path=\"#!\">\n            <Avatar>\n              <img src={image4} alt=\"avatar\" />\n            </Avatar>\n          </Anchor>\n          <MediaBody ml=\"15px\">\n            <StyledName>\n              <Anchor path=\"#!\" color=\"text\">\n                Abigail Johnson\n              </Anchor>\n            </StyledName>\n            <StyledRole>System Administrator</StyledRole>\n          </MediaBody>\n        </Media>\n      </Media>\n    </>\n  );\n};\n\nexport default PeopleMayKnow;\n","import styled, { themeGet } from \"@doar/shared/styled\";\n\nexport const StyledName = styled.p`\n  font-weight: 500;\n  margin-bottom: 0px;\n`;\n\nexport const StyledRole = styled.span`\n  font-size: 12px;\n  color: ${themeGet(\"colors.text3\")};\n`;\n","import {\n  Media,\n  MediaBody,\n  Anchor,\n  Avatar,\n  AvatarInitial,\n} from \"@doar/components\";\nimport image1 from \"@doar/shared/images/img6.jpg\";\nimport image2 from \"@doar/shared/images/img7.jpg\";\nimport WidgetTitle from \"../widget-title\";\nimport { StyledName, StyledRole } from \"./style\";\n\nconst PeopleViewd = () => {\n  return (\n    <>\n      <WidgetTitle title=\"People Also Viewed\" />\n      <Media as=\"ul\" mb=\"15px\">\n        <Media as=\"li\" alignItems=\"center\">\n          <Anchor path=\"#!\">\n            <Avatar status=\"online\">\n              <img src={image1} alt=\"avatar\" />\n            </Avatar>\n          </Anchor>\n          <MediaBody ml=\"15px\">\n            <StyledName>\n              <Anchor path=\"#!\" color=\"text\">\n                Roy Recamadas\n              </Anchor>\n            </StyledName>\n            <StyledRole>UI/UX Designer &amp; Developer</StyledRole>\n          </MediaBody>\n        </Media>\n        <Media as=\"li\" alignItems=\"center\" mt=\"15px\">\n          <Anchor path=\"#!\">\n            <Avatar status=\"offline\">\n              <img src={image2} alt=\"avatar\" />\n            </Avatar>\n          </Anchor>\n          <MediaBody ml=\"15px\">\n            <StyledName>\n              <Anchor path=\"#!\" color=\"text\">\n                Raymart Serencio\n              </Anchor>\n            </StyledName>\n            <StyledRole>Full-Stack Developer</StyledRole>\n          </MediaBody>\n        </Media>\n        <Media as=\"li\" alignItems=\"center\" mt=\"15px\">\n          <Anchor path=\"#!\">\n            <Avatar status=\"offline\">\n              <AvatarInitial bg=\"teal\">R</AvatarInitial>\n            </Avatar>\n          </Anchor>\n          <MediaBody ml=\"15px\">\n            <StyledName>\n              <Anchor path=\"#!\" color=\"text\">\n                Rolando Paloso Jr\n              </Anchor>\n            </StyledName>\n            <StyledRole>Licensed Architect</StyledRole>\n          </MediaBody>\n        </Media>\n        <Media as=\"li\" alignItems=\"center\" mt=\"15px\">\n          <Anchor path=\"#!\">\n            <Avatar status=\"online\">\n              <AvatarInitial bg=\"indigo\">R</AvatarInitial>\n            </Avatar>\n          </Anchor>\n          <MediaBody ml=\"15px\">\n            <StyledName>\n              <Anchor path=\"#!\" color=\"text\">\n                Robert Restificar\n              </Anchor>\n            </StyledName>\n            <StyledRole>Business Analyst</StyledRole>\n          </MediaBody>\n        </Media>\n        <Media as=\"li\" alignItems=\"center\" mt=\"15px\">\n          <Anchor path=\"#!\">\n            <Avatar status=\"online\">\n              <AvatarInitial bg=\"gray600\">A</AvatarInitial>\n            </Avatar>\n          </Anchor>\n          <MediaBody ml=\"15px\">\n            <StyledName>\n              <Anchor path=\"#!\" color=\"text\">\n                Archie Cantones\n              </Anchor>\n            </StyledName>\n            <StyledRole>Senior Software Architect</StyledRole>\n          </MediaBody>\n        </Media>\n      </Media>\n    </>\n  );\n};\n\nexport default PeopleViewd;\n","import styled, { themeGet } from \"@doar/shared/styled\";\n\nexport const StyledName = styled.p`\n  font-weight: 500;\n  margin-bottom: 0px;\n`;\n\nexport const StyledTime = styled.span`\n  font-size: 12px;\n  color: ${themeGet(\"colors.text3\")};\n`;\n","import {\n  Media,\n  MediaBody,\n  Anchor,\n  Avatar,\n  AvatarInitial,\n} from \"@doar/components\";\nimport image1 from \"@doar/shared/images/img8.jpg\";\nimport WidgetTitle from \"../widget-title\";\nimport { StyledName, StyledTime } from \"./style\";\n\nconst Stories = () => {\n  return (\n    <>\n      <WidgetTitle title=\"Stories\" link={{ text: \"Watch All\", path: \"#!\" }} />\n      <Media as=\"ul\" mb=\"15px\">\n        <Media as=\"li\" alignItems=\"center\">\n          <Anchor path=\"#!\">\n            <Avatar status=\"online\">\n              <AvatarInitial bg=\"gray50\">S</AvatarInitial>\n            </Avatar>\n          </Anchor>\n          <MediaBody ml=\"15px\">\n            <StyledName>\n              <Anchor path=\"#!\" color=\"text\">\n                Socrates Itumay\n              </Anchor>\n            </StyledName>\n            <StyledTime>2 hours ago</StyledTime>\n          </MediaBody>\n        </Media>\n        <Media as=\"li\" alignItems=\"center\" mt=\"15px\">\n          <Anchor path=\"#!\">\n            <Avatar status=\"online\">\n              <AvatarInitial bg=\"primary\">I</AvatarInitial>\n            </Avatar>\n          </Anchor>\n          <MediaBody ml=\"15px\">\n            <StyledName>\n              <Anchor path=\"#!\" color=\"text\">\n                Isidore Dilao\n              </Anchor>\n            </StyledName>\n            <StyledTime>5 hours ago</StyledTime>\n          </MediaBody>\n        </Media>\n        <Media as=\"li\" alignItems=\"center\" mt=\"15px\">\n          <Anchor path=\"#!\">\n            <Avatar status=\"offline\">\n              <img src={image1} alt=\"avatar\" />\n            </Avatar>\n          </Anchor>\n          <MediaBody ml=\"15px\">\n            <StyledName>\n              <Anchor path=\"#!\" color=\"text\">\n                Angeline Mercado\n              </Anchor>\n            </StyledName>\n            <StyledTime>1 day ago</StyledTime>\n          </MediaBody>\n        </Media>\n        <Media as=\"li\" alignItems=\"center\" mt=\"15px\">\n          <Anchor path=\"#!\">\n            <Avatar status=\"online\">\n              <AvatarInitial bg=\"info\">K</AvatarInitial>\n            </Avatar>\n          </Anchor>\n          <MediaBody ml=\"15px\">\n            <StyledName>\n              <Anchor path=\"#!\" color=\"text\">\n                Kirby Avendula\n              </Anchor>\n            </StyledName>\n            <StyledTime>2 days ago</StyledTime>\n          </MediaBody>\n        </Media>\n        <Media as=\"li\" alignItems=\"center\" mt=\"15px\">\n          <Anchor path=\"#!\">\n            <Avatar status=\"online\">\n              <AvatarInitial bg=\"gray50\">S</AvatarInitial>\n            </Avatar>\n          </Anchor>\n          <MediaBody ml=\"15px\">\n            <StyledName>\n              <Anchor path=\"#!\" color=\"text\">\n                Socrates Itumay\n              </Anchor>\n            </StyledName>\n            <StyledTime>2 hours ago</StyledTime>\n          </MediaBody>\n        </Media>\n      </Media>\n    </>\n  );\n};\n\nexport default Stories;\n","import styled from \"@doar/shared/styled\";\n\nexport const StyledWrap = styled.div`\n  margin-bottom: 20px;\n  align-items: center;\n  justify-content: space-between;\n  display: flex;\n`;\n\nexport const StyledTitle = styled.h6`\n  font-size: 13px;\n  text-transform: uppercase;\n  font-weight: 600;\n  margin-bottom: 0px;\n`;\n","import { Anchor } from \"@doar/components\";\nimport { StyledWrap, StyledTitle } from \"./style\";\n\ninterface IProps {\n  title: string;\n  link?: {\n    text: string;\n    path: string;\n  };\n}\n\nconst WidgetTitle = ({ title, link }: IProps) => {\n  return (\n    <StyledWrap>\n      <StyledTitle>{title}</StyledTitle>\n      {link && (\n        <Anchor path={link.path} color=\"text3\">\n          {link.text}\n        </Anchor>\n      )}\n    </StyledWrap>\n  );\n};\n\nexport default WidgetTitle;\n"],"names":["className","props","src","alt","size","shape","fluid","align","fit","restProps","$shape","$size","$fluid","$align","$fit","classnames","imageCss","css","themeGet","space","layout","StyledImage","styled","m","mx","my","ml","mr","mt","mb","maxWidth","maxHeight","width","height","display","rest","groupCss","device","theme","name","flexbox","StyledGroup","alignItems","justifyContent","children","as","$el","StyledMedia","StyledMediaBody","$alignMent","px","StyledName","StyledRole","title","path","image1","color","image2","image3","image4","status","bg","StyledTime","link","text","StyledWrap","StyledTitle"],"sourceRoot":""}