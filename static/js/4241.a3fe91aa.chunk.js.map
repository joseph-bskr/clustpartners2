{"version":3,"file":"static/js/4241.a3fe91aa.chunk.js","mappings":"yNAYA,EAJkB,SAAC,GAAqC,IAAnCA,EAAkC,EAAlCA,UAAcC,GAAoB,YACnD,OAAO,SAAC,MAAD,QAAiBD,UAAWA,GAAeC,GACrD,E,sGCKKC,GAAYC,EAAAA,EAAAA,IAAH,kNAETC,EAAAA,GAAAA,MAIAA,EAAAA,GAAAA,QAGA,qBAAGC,cAEDF,EAAAA,EAAAA,IADW,oLADb,IASA,gBAAGG,EAAH,EAAGA,OAAH,OACEA,GACW,WAAXA,IACAH,EAAAA,EAAAA,IAFA,sGADF,IAQH,gBAAGI,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,kBAAjB,OACMD,GAAgBC,KACjBL,EAAAA,EAAAA,IADC,IAAD,4GAG2BM,EAAAA,EAAAA,GAAS,iBAJzC,IAMG,SAACR,GAAD,MACuB,SAArBA,EAAMS,MAAMC,OACZR,EAAAA,EAAAA,IADA,yDAEaM,EAAAA,EAAAA,GAAS,kBAHxB,GAKAG,EAAAA,GACAC,EAAAA,IAGOC,GAAgBC,EAAAA,EAAAA,KACzB,cACIC,EADJ,EAEIC,GAFJ,EAGIC,GAHJ,EAIIC,EAJJ,EAKIC,GALJ,EAMIC,GANJ,EAOIC,GAPJ,EAQId,kBARJ,EASIH,YATJ,EAUIC,OAVJ,IAWOiB,GAXP,mBAYM,0BAASA,GAZf,GADyBR,CAAH,gCAepBb,G,gDCvCN,EArBgB,SAAC,GAMF,IALXsB,EAKU,EALVA,SACAxB,EAIU,EAJVA,UACAyB,EAGU,EAHVA,WACAC,EAEU,EAFVA,MACGC,GACO,YACV,OACI,SAACb,GAAD,gBACIT,YAAaoB,EACbnB,OAAQoB,EACR1B,UAAWA,GACP2B,GAJR,cAMI,SAAC,EAAD,CAAW3B,UAAU,YAAY4B,GAAG,IAAIC,GAAG,IAA3C,SACKL,MAIhB,C,4HCGD,EA/BsC,CAClC,CACIM,GAAI,EACJC,MAAO,sBACPC,OAAQ,IACRC,KAAM,iBACNC,MAAO,WAEX,CACIJ,GAAI,EACJC,MAAO,mBACPC,OAAQ,IACRC,KAAM,kBACNC,MAAO,WAEX,CACIJ,GAAI,EACJC,MAAO,iBACPC,OAAQ,IACRC,KAAM,YACNC,MAAO,WAEX,CACIJ,GAAI,EACJC,MAAO,kBACPC,OAAQ,EACRC,KAAM,iBACNC,MAAO,Y,oGCjBFC,GAAapB,EAAAA,EAAAA,KAAO,gBAAMQ,EAAN,2BAAiB,SAAC,KAAD,UAAUA,GAA3B,GAAPR,CAAH,6JAKjB,SAACd,GAAD,OAAWE,EAAAA,EAAAA,IAAV,IAAD,wEAEQiC,EAAAA,EAAAA,KAAU3B,EAAAA,EAAAA,GAAS,kBAATA,CAA4BR,IACnCoC,SAAS,IACTC,cAJX,GAMAC,EAAAA,IAGOC,EAAazB,EAAAA,GAAAA,GAAH,gLASV0B,GAAe1B,EAAAA,EAAAA,KAAO,cAAGmB,MAAH,IAAaX,GAAb,mBAC/B,yBAAQA,GADuB,GAAPR,CAAH,uDAInB2B,EAAAA,IAGOC,EAAa5B,EAAAA,GAAAA,KAAH,mVASL,gBAAG6B,EAAH,EAAGA,IAAH,OAAaC,EAAAA,EAAAA,IAASD,EAAK,GAA3B,IACL,qBAAGA,GAAH,IChCb,EAdgB,SAAC,GAA4C,IAA1Cb,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,MACpC,OACI,SAACC,EAAD,CAAYW,kBAAmBZ,EAA/B,UACI,UAAC,IAAD,YACI,SAACM,EAAD,UAAaT,KACb,SAACU,EAAD,CAAcP,MAAOA,EAArB,SAA6BF,KAC7B,SAACW,EAAD,CAAYC,IAAKV,EAAjB,UACI,cAAGlC,UAAWiC,UAKjC,ECGD,EAjBe,WACX,OACI,SAAC,IAAD,CAAKc,QAAS,GAAd,SACKC,EAAAA,KAAgB,SAACC,GAAD,OACb,SAAC,IAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAvB,UACI,SAAC,EAAD,CACIrB,MAAOkB,EAAKlB,MACZC,OAAQiB,EAAKjB,OACbC,KAAMgB,EAAKhB,KACXC,MAAOe,EAAKf,SALYe,EAAKnB,GADxB,KAY5B,ECED,EAjBe,WACX,OACI,SAAC,IAAD,CAAKiB,QAAS,GAAd,SACKC,EAAAA,KAAgB,SAACC,GAAD,OACb,SAAC,IAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAvB,UACI,SAAC,EAAD,CACIrB,MAAOkB,EAAKlB,MACZC,OAAQiB,EAAKjB,OACbC,KAAMgB,EAAKhB,KACXC,MAAOe,EAAKf,SALYe,EAAKnB,GADxB,KAY5B,ECFD,EAZqB,WACjB,OACI,iCACI,SAAC,IAAD,KACA,UAAC,IAAD,YACI,SAAC,EAAD,KACA,SAAC,EAAD,SAIf,C","sources":["../../components/src/grid/container.tsx","layouts/content/style.tsx","layouts/content/index.tsx","../../shared/data/dashboard-six/conversion.ts","components/dashboard-six/job-card/style.tsx","components/dashboard-six/job-card/index.tsx","containers/dashboard-six/row-one/index.tsx","containers/dashboard-six/row-two/index.tsx","pages/dashboard-six.tsx"],"sourcesContent":["import { SpaceProps } from \"@doar/shared/styled\";\nimport { StyledContainer } from \"./style\";\n\ninterface IProps extends SpaceProps {\n    children: React.ReactNode;\n    className?: string;\n}\n\nconst Container = ({ className, ...props }: IProps) => {\n    return <StyledContainer className={className} {...props} />;\n};\n\nexport default Container;\n","import styled, {\n    device,\n    space,\n    border as borderStyle,\n    SpaceProps,\n    BorderProps,\n    css,\n    themeGet,\n} from \"@doar/shared/styled\";\n\ninterface IProps extends SpaceProps, BorderProps {\n    $fullHeight?: boolean;\n    $align: \"top\" | \"center\" | \"bottom\";\n}\n\nconst conentCSS = css<IProps>`\n    padding: 20px;\n    ${device.large} {\n        padding: 25px;\n        margin-top: 60px;\n    }\n    ${device.xlarge} {\n        padding: 30px;\n    }\n    ${({ $fullHeight }) =>\n        $fullHeight &&\n        css`\n            min-height: calc(100vh - 107px);\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n        `}\n\n    ${({ $align }) =>\n        $align &&\n        $align !== \"center\" &&\n        css`\n            & > .container {\n                flex: 1;\n            }\n        `}\n\t${({ borderBottom, borderBottomWidth }) =>\n        (borderBottom || borderBottomWidth) &&\n        css`\n            border-bottom-style: solid;\n            border-bottom-color: ${themeGet(\"colors.border\")};\n        `}\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            color: ${themeGet(\"colors.gray500\")};\n        `}\n    ${space};\n    ${borderStyle};\n`;\n\nexport const StyledContent = styled(\n    ({\n        p,\n        px,\n        py,\n        m,\n        mx,\n        my,\n        mt,\n        borderBottomWidth,\n        $fullHeight,\n        $align,\n        ...rest\n    }) => <div {...rest} />\n)<IProps>`\n    ${conentCSS}\n`;\n","import { SpaceProps, BorderProps } from \"@doar/shared/styled\";\nimport { Container } from \"@doar/components\";\nimport { StyledContent } from \"./style\";\n\ninterface IProps extends SpaceProps, BorderProps {\n    children: React.ReactNode;\n    className?: string;\n    fullHeight?: boolean;\n    align?: \"top\" | \"center\" | \"bottom\";\n}\n\nconst Content = ({\n    children,\n    className,\n    fullHeight,\n    align,\n    ...restProps\n}: IProps) => {\n    return (\n        <StyledContent\n            $fullHeight={fullHeight}\n            $align={align}\n            className={className}\n            {...restProps}\n        >\n            <Container className=\"container\" pl=\"0\" pr=\"0\">\n                {children}\n            </Container>\n        </StyledContent>\n    );\n};\n\nexport default Content;\n","import { IJobConversion } from \"../../types\";\n\nconst conversions: IJobConversion[] = [\n    {\n        id: 1,\n        title: \"Interview Schedules\",\n        amount: 540,\n        icon: \"fa fa-calendar\",\n        color: \"#0168fa\",\n    },\n    {\n        id: 2,\n        title: \"Application Sent\",\n        amount: 630,\n        icon: \"fa fa-briefcase\",\n        color: \"#10b759\",\n    },\n    {\n        id: 3,\n        title: \"Profile Viewed\",\n        amount: 350,\n        icon: \"fa fa-eye\",\n        color: \"#00b8d4\",\n    },\n    {\n        id: 4,\n        title: \"Unread Messages\",\n        amount: 5,\n        icon: \"fa fa-envelope\",\n        color: \"#00cccc\",\n    },\n];\n\nexport default conversions;\n","import styled, {\n    ColorProps,\n    border,\n    color as colorStyle,\n    css,\n    themeGet,\n    tinycolor,\n} from \"@doar/shared/styled\";\n\nimport { Card } from \"@doar/components\";\nimport { hexTorgb } from \"@doar/shared/methods\";\n\nexport const StyledCard = styled(({ ...rest }) => <Card {...rest} />)`\n    position: relative;\n    border-color: transparent;\n    border-bottom-width: 4px;\n    padding-right: 100px;\n    ${(props) => css`\n        box-shadow: 0 0 15px\n            ${tinycolor(themeGet(\"colors.skinUi01\")(props) as string)\n                .setAlpha(0.1)\n                .toRgbString()};\n    `}\n    ${border}\n`;\n\nexport const StyleTitle = styled.h6`\n    font-size: 21px;\n    letter-spacing: 0.5px;\n    text-transform: capitalize;\n    font-weight: 600;\n    color: #1b2e4b;\n    margin-bottom: 8px;\n`;\n\nexport const StyledAmount = styled(({ color, ...rest }) => (\n    <h4 {...rest} />\n))<ColorProps>`\n    font-size: 30px;\n    ${colorStyle};\n`;\n\nexport const StyledIcon = styled.span<{ $bg: string }>`\n    width: 60px;\n    height: 60px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 25px;\n    border-radius: 5px;\n    margin-left: auto;\n    background: ${({ $bg }) => hexTorgb($bg, 0.3)};\n    color: ${({ $bg }) => $bg};\n    position: absolute;\n    top: 50%;\n    right: 30px;\n    transform: translateY(-50%);\n`;\n","import { CardBody } from \"@doar/components\";\nimport { IJobConversion } from \"@doar/shared/types\";\nimport { StyledCard, StyleTitle, StyledAmount, StyledIcon } from \"./style\";\n\ntype TProps = Omit<IJobConversion, \"id\">;\n\nconst JobCard = ({ title, amount, icon, color }: TProps) => {\n    return (\n        <StyledCard borderBottomColor={color}>\n            <CardBody>\n                <StyleTitle>{title}</StyleTitle>\n                <StyledAmount color={color}>{amount}</StyledAmount>\n                <StyledIcon $bg={color}>\n                    <i className={icon} />\n                </StyledIcon>\n            </CardBody>\n        </StyledCard>\n    );\n};\n\nexport default JobCard;\n","import { Row, Col } from \"@doar/components\";\nimport { conversions } from \"@doar/shared/data/dashboard-six\";\nimport JobCard from \"../../../components/dashboard-six/job-card\";\n\nconst RowOne = () => {\n    return (\n        <Row gutters={30}>\n            {conversions.map((data) => (\n                <Col sm={6} lg={3} mb={30} key={data.id}>\n                    <JobCard\n                        title={data.title}\n                        amount={data.amount}\n                        icon={data.icon}\n                        color={data.color}\n                    />\n                </Col>\n            ))}\n        </Row>\n    );\n};\n\nexport default RowOne;\n","import { Row, Col } from \"@doar/components\";\nimport { conversions } from \"@doar/shared/data/dashboard-six\";\nimport JobCard from \"../../../components/dashboard-six/job-card\";\n\nconst RowTwo = () => {\n    return (\n        <Row gutters={20}>\n            {conversions.map((data) => (\n                <Col sm={6} lg={3} mb={30} key={data.id}>\n                    <JobCard\n                        title={data.title}\n                        amount={data.amount}\n                        icon={data.icon}\n                        color={data.color}\n                    />\n                </Col>\n            ))}\n        </Row>\n    );\n};\n\nexport default RowTwo;\n","import SEO from \"../components/seo\";\nimport Content from \"../layouts/content\";\nimport RowOne from \"../containers/dashboard-six/row-one\";\nimport RowTwo from \"../containers/dashboard-six/row-two\";\n\nconst DashboardSix = () => {\n    return (\n        <>\n            <SEO />\n            <Content>\n                <RowOne />\n                <RowTwo />\n            </Content>\n        </>\n    );\n};\n\nexport default DashboardSix;\n"],"names":["className","props","conentCSS","css","device","$fullHeight","$align","borderBottom","borderBottomWidth","themeGet","theme","name","space","borderStyle","StyledContent","styled","p","px","py","m","mx","my","mt","rest","children","fullHeight","align","restProps","pl","pr","id","title","amount","icon","color","StyledCard","tinycolor","setAlpha","toRgbString","border","StyleTitle","StyledAmount","colorStyle","StyledIcon","$bg","hexTorgb","borderBottomColor","gutters","conversions","data","sm","lg","mb"],"sourceRoot":""}