{"version":3,"file":"static/js/3883.7373b5e4.chunk.js","mappings":"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","sources":["../../components/src/ui/badge/style.tsx","../../components/src/ui/badge/badge.tsx","../../components/src/ui/card/card-footer.tsx","../../components/src/ui/card/card-image.tsx","components/event-card/style.tsx","components/event-card/index.tsx","containers/events/main/index.tsx","components/widgets/upcoming-events/style.tsx","components/widgets/upcoming-events/index.tsx","components/widgets/events-by-location/index.tsx","containers/events/sidebar/style.tsx","containers/events/sidebar/index.tsx","pages/events.tsx"],"sourcesContent":["import styled, { css, themeGet, space, SpaceProps } from \"@doar/shared/styled\";\n\ninterface BadgeProps extends SpaceProps {\n    $color?:\n        | \"primary\"\n        | \"secondary\"\n        | \"success\"\n        | \"danger\"\n        | \"warning\"\n        | \"info\"\n        | \"light\"\n        | \"dark\";\n    $variant?: \"contained\" | \"texted\";\n    $shape?: \"rounded\" | \"square\" | \"circle\";\n    $pill?: boolean;\n}\n\nconst props = [\n    \"p\",\n    \"px\",\n    \"py\",\n    \"pt\",\n    \"pb\",\n    \"pl\",\n    \"pr\",\n    \"m\",\n    \"mx\",\n    \"my\",\n    \"mt\",\n    \"mb\",\n    \"ml\",\n    \"mr\",\n];\n\nconst badgeCss = css<BadgeProps>`\n    font-size: 10px;\n    font-weight: 500;\n    font-family: ${themeGet(\"fonts.interUi\")};\n    padding: 3px 5px 4px;\n    display: inline-block;\n    line-height: 1;\n    text-align: center;\n    white-space: nowrap;\n    vertical-align: baseline;\n    transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out,\n        border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n    ${({ $color, $variant }) =>\n        $color === \"primary\" &&\n        $variant === \"contained\" &&\n        css`\n            color: #fff;\n            background-color: ${themeGet(\"colors.primary\")};\n        `}\n    ${({ $color, $variant }) =>\n        $color === \"secondary\" &&\n        $variant === \"contained\" &&\n        css`\n            color: #fff;\n            background-color: ${themeGet(\"colors.gray600\")};\n        `}\n    ${({ $color, $variant }) =>\n        $color === \"success\" &&\n        $variant === \"contained\" &&\n        css`\n            color: #fff;\n            background-color: ${themeGet(\"colors.success\")};\n        `}\n\t${({ $color, $variant }) =>\n        $color === \"danger\" &&\n        $variant === \"contained\" &&\n        css`\n            color: #fff;\n            background-color: ${themeGet(\"colors.danger\")};\n        `}\n\t${({ $color, $variant }) =>\n        $color === \"warning\" &&\n        $variant === \"contained\" &&\n        css`\n            color: #fff;\n            background-color: ${themeGet(\"colors.warning\")};\n        `}\n\t${({ $color, $variant }) =>\n        $color === \"info\" &&\n        $variant === \"contained\" &&\n        css`\n            color: #fff;\n            background-color: ${themeGet(\"colors.info\")};\n        `}\n\t${({ $color, $variant }) =>\n        $color === \"light\" &&\n        $variant === \"contained\" &&\n        css`\n            color: ${themeGet(\"colors.gray900\")};\n            background-color: ${themeGet(\"colors.gray300\")};\n        `}\n\t${({ $color, $variant }) =>\n        $color === \"dark\" &&\n        $variant === \"contained\" &&\n        css`\n            color: #fff;\n            background-color: ${themeGet(\"colors.dark\")};\n        `}\n\t${({ $pill }) =>\n        $pill &&\n        css`\n            padding-left: 8px;\n            padding-right: 8px;\n        `}\n\t${({ $variant }) =>\n        $variant === \"texted\" &&\n        css`\n            color: ${themeGet(\"colors.dark\")};\n            background-color: transparent;\n            padding: 0;\n        `}\n\t${({ $shape }) =>\n        $shape === \"rounded\" &&\n        css`\n            border-radius: 3px;\n        `}\n\t${({ $shape }) =>\n        $shape === \"square\" &&\n        css`\n            border-radius: 0;\n        `}\n\t${({ $shape }) =>\n        $shape === \"circle\" &&\n        css`\n            border-radius: 100%;\n        `}\n`;\n\nexport const StyledBadge = styled(\"span\").withConfig({\n    shouldForwardProp: (prop, defaultValidatorFn) =>\n        ![...props].includes(prop) && defaultValidatorFn(prop),\n})<BadgeProps>`\n    ${badgeCss};\n    ${space};\n`;\n","import classnames from \"clsx\";\nimport { SpaceProps } from \"@doar/shared/styled\";\nimport { StyledBadge } from \"./style\";\n\nexport interface BadgeProps extends SpaceProps {\n    children: React.ReactNode;\n    /**\n     * The visual style of the badge\n     */\n    color?:\n        | \"primary\"\n        | \"secondary\"\n        | \"success\"\n        | \"danger\"\n        | \"warning\"\n        | \"info\"\n        | \"light\"\n        | \"dark\";\n    /**\n     *  Optional. Default is `contained`.\n     */\n    variant?: \"contained\" | \"texted\";\n    /**\n     * Optional. Default is `rounded`.\n     */\n    shape?: \"rounded\" | \"square\" | \"circle\";\n    /**\n     * Pass the `pill` props to make badges more rounded with some additional horizontal padding\n     */\n    pill?: boolean;\n    /**\n     * Optional. Extra Class Name\n     */\n    className?: string;\n}\n\nconst Badge = ({\n    color,\n    variant,\n    shape,\n    pill,\n    children,\n    className,\n    ...restProps\n}: BadgeProps) => {\n    return (\n        <StyledBadge\n            $color={color}\n            $variant={variant}\n            $shape={shape}\n            $pill={pill}\n            className={classnames(className, \"badge\")}\n            {...restProps}\n        >\n            {children}\n        </StyledBadge>\n    );\n};\n\nBadge.defaultProps = {\n    color: \"primary\",\n    variant: \"contained\",\n    shape: \"rounded\",\n};\n\nexport default Badge;\n","import classnames from \"clsx\";\nimport { StyledCardFooter } from \"./style\";\nimport { ICardFooterProps } from \"./types\";\n\nconst CardFooter = ({\n    children,\n    className,\n    ...restProps\n}: ICardFooterProps) => {\n    return (\n        <StyledCardFooter\n            className={classnames(className, \"card-footer\")}\n            {...restProps}\n        >\n            {children}\n        </StyledCardFooter>\n    );\n};\nexport default CardFooter;\n","import classnames from \"clsx\";\nimport { StyledCardImage } from \"./style\";\nimport { ICardImageProps } from \"./types\";\n\nconst CardImage = ({\n    src,\n    alt,\n    className,\n    isTop,\n    isBottom,\n    ...restProps\n}: ICardImageProps) => {\n    const topClass = isTop ? \"card-img-top\" : \"\";\n    const bottomClass = isBottom ? \"card-img-bottom\" : \"\";\n    return (\n        <StyledCardImage\n            src={src}\n            alt={alt}\n            className={classnames(\n                className,\n                \"card-image\",\n                topClass,\n                bottomClass\n            )}\n            $isTop={isTop}\n            $isBottom={isBottom}\n            {...restProps}\n        />\n    );\n};\n\nexport default CardImage;\n","import styled, { device, themeGet } from \"@doar/shared/styled\";\nimport { Card, CardBody, CardFooter } from \"@doar/components\";\n\nexport const StyledCard = styled(({ ...rest }) => <Card {...rest} />)`\n    border-width: 0;\n    .card-img-top {\n        height: 150px;\n        object-fit: cover;\n    }\n`;\n\nexport const StyledCardBody = styled(({ ...rest }) => <CardBody {...rest} />)`\n    font-size: 13px;\n    padding: 15px;\n    border: 1px solid ${themeGet(\"colors.border\")};\n    ${device.large} {\n        padding: 20px;\n    }\n`;\n\nexport const StyledCardFooter = styled(({ ...rest }) => (\n    <CardFooter {...rest} />\n))`\n    border: 1px solid ${themeGet(\"colors.border\")};\n    border-top-width: 0;\n    border-bottom-right-radius: ${themeGet(\"radii.rounded\")};\n    border-bottom-left-radius: ${themeGet(\"radii.rounded\")};\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-size: 13px;\n`;\n\nexport const StyledName = styled.h5`\n    font-size: 14px;\n    margin-top: 15px;\n    margin-bottom: 0;\n    ${device.large} {\n        font-size: 15px;\n    }\n`;\n","import { CardImage, Anchor, Text, Button } from \"@doar/components\";\nimport {\n    StyledCard,\n    StyledCardBody,\n    StyledName,\n    StyledCardFooter,\n} from \"./style\";\n\ninterface IProps {\n    image: string;\n    title: string;\n    date: string;\n    place: string;\n    location: string;\n    people: string;\n    path: string;\n}\n\nconst EventCard = ({\n    image,\n    title,\n    date,\n    place,\n    location,\n    people,\n    path,\n}: IProps) => {\n    return (\n        <StyledCard>\n            <CardImage src={image} alt=\"card\" isTop />\n            <StyledCardBody>\n                <StyledName>\n                    <Anchor path={path} variant=\"link2\">\n                        {title}\n                    </Anchor>\n                </StyledName>\n                <Text mb={0} color=\"text3\">\n                    {date}, {place}\n                </Text>\n                <Text as=\"span\" color=\"text3\">\n                    {location}\n                </Text>\n            </StyledCardBody>\n            <StyledCardFooter>\n                <Text as=\"span\" color=\"text3\">\n                    {people} people interested\n                </Text>\n                <Button size=\"xs\" color=\"secondary\">\n                    Interested\n                </Button>\n            </StyledCardFooter>\n        </StyledCard>\n    );\n};\n\nexport default EventCard;\n","import { Row, Col } from \"@doar/components\";\nimport image1 from \"@doar/shared/images/img27.jpg\";\nimport image2 from \"@doar/shared/images/img26.jpg\";\nimport image3 from \"@doar/shared/images/img28.jpg\";\nimport image4 from \"@doar/shared/images/img29.jpg\";\nimport image5 from \"@doar/shared/images/img31.jpg\";\nimport EventCard from \"../../../components/event-card\";\n\nconst MainContent = () => {\n    return (\n        <Col lg={8} xl={9}>\n            <Row gutters={20}>\n                <Col md={6}>\n                    <EventCard\n                        image={image1}\n                        title=\"Moto Rally Championship\"\n                        date=\"Mar 22 - Mar 24\"\n                        place=\"World Trade Center Metro\"\n                        path=\"#!\"\n                        location=\"Manila, Philippines\"\n                        people=\"6,187\"\n                    />\n                </Col>\n                <Col md={6} mt={[\"20px\", null, 0]}>\n                    <EventCard\n                        image={image2}\n                        title=\"Reggae Music Showdown\"\n                        date=\"Mar 30 - Mar 31\"\n                        place=\"Cebu Business Park\"\n                        path=\"#!\"\n                        location=\"Cebu City, Cebu, Philippines\"\n                        people=\"5,092\"\n                    />\n                </Col>\n                <Col md={6} mt=\"20px\">\n                    <EventCard\n                        image={image3}\n                        title=\"Acoustic Workshop\"\n                        date=\"Apr 10 - Apr 12\"\n                        place=\"Cebu IT Park\"\n                        path=\"#!\"\n                        location=\"Cebu City, Cebu, Philippines\"\n                        people=\"5,001\"\n                    />\n                </Col>\n                <Col md={6} mt=\"20px\">\n                    <EventCard\n                        image={image4}\n                        title=\"Photoshop Effects Workshop\"\n                        date=\"Apr 12 - Apr 13\"\n                        place=\"2nd Fl. Westfield Building\"\n                        path=\"#!\"\n                        location=\"Bay Area, San Francisco, CA\"\n                        people=\"4,343\"\n                    />\n                </Col>\n                <Col md={6} mt=\"20px\">\n                    <EventCard\n                        image={image5}\n                        title=\"Annual Dog Showdown\"\n                        date=\"Apr 15, 8:00am - 05:00pm\"\n                        place=\"Fishermans Wharf\"\n                        path=\"#!\"\n                        location=\"Bay Area, San Francisco, CA\"\n                        people=\"4,343\"\n                    />\n                </Col>\n            </Row>\n        </Col>\n    );\n};\n\nexport default MainContent;\n","import styled, { themeGet, color, ColorProps } from \"@doar/shared/styled\";\n\nexport const StyledIcon = styled(({ bg, ...rest }) => (\n    <div {...rest} />\n))<ColorProps>`\n    width: 40px;\n    height: 40px;\n    color: #fff;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    border-radius: ${themeGet(\"radii.rounded\")};\n    ${color}\n`;\n\nexport const StyledName = styled.p`\n    font-weight: 500;\n    margin-bottom: 0px;\n`;\n\nexport const StyledSpan = styled.span`\n    font-size: 13px;\n    color: ${themeGet(\"colors.text3\")};\n`;\n","import { Calendar } from \"react-feather\";\nimport { Media, MediaBody, Anchor } from \"@doar/components\";\nimport WidgetTitle from \"../widget-title\";\nimport { StyledName, StyledSpan, StyledIcon } from \"./style\";\n\nconst PopularGroups = () => {\n    return (\n        <>\n            <WidgetTitle title=\"Popular Groups\" />\n            <Media as=\"ul\" mb=\"15px\">\n                <Media as=\"li\" alignItems=\"center\">\n                    <StyledIcon bg=\"dark\">\n                        <Calendar width={24} height={24} />\n                    </StyledIcon>\n                    <MediaBody ml=\"15px\">\n                        <StyledName>\n                            <Anchor path=\"#!\" color=\"text\">\n                                My 32th Birthday\n                            </Anchor>\n                        </StyledName>\n                        <StyledSpan>Today, April 21, 5:00pm</StyledSpan>\n                    </MediaBody>\n                </Media>\n                <Media as=\"li\" alignItems=\"center\" mt=\"15px\">\n                    <StyledIcon bg=\"indigo\">\n                        <Calendar width={24} height={24} />\n                    </StyledIcon>\n                    <MediaBody ml=\"15px\">\n                        <StyledName>\n                            <Anchor path=\"#!\" color=\"text\">\n                                Dribbble Meetup\n                            </Anchor>\n                        </StyledName>\n                        <StyledSpan>Tomorrow, April 22, 3:00pm</StyledSpan>\n                    </MediaBody>\n                </Media>\n            </Media>\n        </>\n    );\n};\n\nexport default PopularGroups;\n","import { Badge, Nav, NavLink } from \"@doar/components\";\nimport WidgetTitle from \"../widget-title\";\n\nconst EventsByLocation = () => {\n    return (\n        <>\n            <WidgetTitle title=\"Events By Location\" />\n            <Nav customStyle=\"classic\">\n                <NavLink path=\"#!\">\n                    <span>San Francisco, California</span>\n                    <Badge variant=\"texted\">20</Badge>\n                </NavLink>\n                <NavLink path=\"#!\">\n                    <span>Los Angeles, California</span>\n                    <Badge variant=\"texted\">18</Badge>\n                </NavLink>\n                <NavLink path=\"#!\">\n                    <span>Las Vegas, Nevada</span>\n                    <Badge variant=\"texted\">14</Badge>\n                </NavLink>\n                <NavLink path=\"#!\">\n                    <span>Austin, Texas</span>\n                    <Badge variant=\"texted\">12</Badge>\n                </NavLink>\n                <NavLink path=\"#!\">\n                    <span>Arlington, Nebraska</span>\n                    <Badge variant=\"texted\">10</Badge>\n                </NavLink>\n            </Nav>\n        </>\n    );\n};\n\nexport default EventsByLocation;\n","import styled from \"@doar/shared/styled\";\n\nexport const StyledWrap = styled.div`\n    &:not(:last-of-type) {\n        margin-bottom: 50px;\n    }\n`;\n","import { Col } from \"@doar/components\";\nimport UpcomingEvents from \"../../../components/widgets/upcoming-events\";\nimport EventsByLocation from \"../../../components/widgets/events-by-location\";\nimport { StyledWrap } from \"./style\";\n\nconst Sidebar = () => {\n    return (\n        <Col sm={7} md={5} lg={4} xl={3} mt={[\"40px\", null, null, \"0px\"]}>\n            <StyledWrap>\n                <UpcomingEvents />\n            </StyledWrap>\n            <StyledWrap>\n                <EventsByLocation />\n            </StyledWrap>\n        </Col>\n    );\n};\n\nexport default Sidebar;\n","import { Row } from \"@doar/components\";\nimport Content from \"../layouts/content\";\nimport PageHeader from \"../components/page-header\";\nimport MainContent from \"../containers/events/main\";\nimport Sidebar from \"../containers/events/sidebar\";\nimport SEO from \"../components/seo\";\n\nconst Events = () => {\n    return (\n        <>\n            <SEO />\n            <Content borderBottomWidth=\"1px\">\n                <PageHeader\n                    prev={[\n                        { text: \"Profile\", link: \"/profile-view\" },\n                        { text: \"Discover\", link: \"/\" },\n                    ]}\n                    title=\"Events\"\n                    wcText=\"Discover Events\"\n                />\n            </Content>\n            <Content mt={[null, null, null, \"0px\"]}>\n                <Row>\n                    <MainContent />\n                    <Sidebar />\n                </Row>\n            </Content>\n        </>\n    );\n};\n\nexport default Events;\n"],"names":["props","badgeCss","css","themeGet","$color","$variant","$pill","$shape","StyledBadge","styled","withConfig","shouldForwardProp","prop","defaultValidatorFn","includes","space","Badge","color","variant","shape","pill","children","className","restProps","classnames","defaultProps","src","alt","isTop","isBottom","topClass","bottomClass","$isTop","$isBottom","StyledCard","rest","StyledCardBody","device","StyledCardFooter","StyledName","image","title","date","place","location","people","path","mb","as","size","lg","xl","gutters","md","image1","mt","image2","image3","image4","image5","StyledIcon","bg","StyledSpan","alignItems","width","height","ml","customStyle","StyledWrap","sm","borderBottomWidth","prev","text","link","wcText"],"sourceRoot":""}