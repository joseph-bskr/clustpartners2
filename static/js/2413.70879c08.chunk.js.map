{"version":3,"file":"static/js/2413.70879c08.chunk.js","mappings":"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","sources":["../../components/src/ui/badge/style.tsx","../../components/src/ui/badge/badge.tsx","../../components/src/ui/card/card-image.tsx","../../components/src/ui/image/image-group.tsx","../../components/src/ui/image/image.tsx","../../components/src/ui/image/style.tsx","components/group-card/style.tsx","components/group-card/index.tsx","containers/groups/main/index.tsx","components/widgets/popular-groups/style.tsx","components/widgets/popular-groups/index.tsx","components/widgets/groups-by-position/index.tsx","components/widgets/groups-by-location/index.tsx","containers/groups/sidebar/style.tsx","containers/groups/sidebar/index.tsx","pages/groups.tsx"],"sourcesContent":["import styled, { css, themeGet, space, SpaceProps } from \"@doar/shared/styled\";\n\ninterface BadgeProps extends SpaceProps {\n    $color?:\n        | \"primary\"\n        | \"secondary\"\n        | \"success\"\n        | \"danger\"\n        | \"warning\"\n        | \"info\"\n        | \"light\"\n        | \"dark\";\n    $variant?: \"contained\" | \"texted\";\n    $shape?: \"rounded\" | \"square\" | \"circle\";\n    $pill?: boolean;\n}\n\nconst props = [\n    \"p\",\n    \"px\",\n    \"py\",\n    \"pt\",\n    \"pb\",\n    \"pl\",\n    \"pr\",\n    \"m\",\n    \"mx\",\n    \"my\",\n    \"mt\",\n    \"mb\",\n    \"ml\",\n    \"mr\",\n];\n\nconst badgeCss = css<BadgeProps>`\n    font-size: 10px;\n    font-weight: 500;\n    font-family: ${themeGet(\"fonts.interUi\")};\n    padding: 3px 5px 4px;\n    display: inline-block;\n    line-height: 1;\n    text-align: center;\n    white-space: nowrap;\n    vertical-align: baseline;\n    transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out,\n        border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n    ${({ $color, $variant }) =>\n        $color === \"primary\" &&\n        $variant === \"contained\" &&\n        css`\n            color: #fff;\n            background-color: ${themeGet(\"colors.primary\")};\n        `}\n    ${({ $color, $variant }) =>\n        $color === \"secondary\" &&\n        $variant === \"contained\" &&\n        css`\n            color: #fff;\n            background-color: ${themeGet(\"colors.gray600\")};\n        `}\n    ${({ $color, $variant }) =>\n        $color === \"success\" &&\n        $variant === \"contained\" &&\n        css`\n            color: #fff;\n            background-color: ${themeGet(\"colors.success\")};\n        `}\n\t${({ $color, $variant }) =>\n        $color === \"danger\" &&\n        $variant === \"contained\" &&\n        css`\n            color: #fff;\n            background-color: ${themeGet(\"colors.danger\")};\n        `}\n\t${({ $color, $variant }) =>\n        $color === \"warning\" &&\n        $variant === \"contained\" &&\n        css`\n            color: #fff;\n            background-color: ${themeGet(\"colors.warning\")};\n        `}\n\t${({ $color, $variant }) =>\n        $color === \"info\" &&\n        $variant === \"contained\" &&\n        css`\n            color: #fff;\n            background-color: ${themeGet(\"colors.info\")};\n        `}\n\t${({ $color, $variant }) =>\n        $color === \"light\" &&\n        $variant === \"contained\" &&\n        css`\n            color: ${themeGet(\"colors.gray900\")};\n            background-color: ${themeGet(\"colors.gray300\")};\n        `}\n\t${({ $color, $variant }) =>\n        $color === \"dark\" &&\n        $variant === \"contained\" &&\n        css`\n            color: #fff;\n            background-color: ${themeGet(\"colors.dark\")};\n        `}\n\t${({ $pill }) =>\n        $pill &&\n        css`\n            padding-left: 8px;\n            padding-right: 8px;\n        `}\n\t${({ $variant }) =>\n        $variant === \"texted\" &&\n        css`\n            color: ${themeGet(\"colors.dark\")};\n            background-color: transparent;\n            padding: 0;\n        `}\n\t${({ $shape }) =>\n        $shape === \"rounded\" &&\n        css`\n            border-radius: 3px;\n        `}\n\t${({ $shape }) =>\n        $shape === \"square\" &&\n        css`\n            border-radius: 0;\n        `}\n\t${({ $shape }) =>\n        $shape === \"circle\" &&\n        css`\n            border-radius: 100%;\n        `}\n`;\n\nexport const StyledBadge = styled(\"span\").withConfig({\n    shouldForwardProp: (prop, defaultValidatorFn) =>\n        ![...props].includes(prop) && defaultValidatorFn(prop),\n})<BadgeProps>`\n    ${badgeCss};\n    ${space};\n`;\n","import classnames from \"clsx\";\nimport { SpaceProps } from \"@doar/shared/styled\";\nimport { StyledBadge } from \"./style\";\n\nexport interface BadgeProps extends SpaceProps {\n    children: React.ReactNode;\n    /**\n     * The visual style of the badge\n     */\n    color?:\n        | \"primary\"\n        | \"secondary\"\n        | \"success\"\n        | \"danger\"\n        | \"warning\"\n        | \"info\"\n        | \"light\"\n        | \"dark\";\n    /**\n     *  Optional. Default is `contained`.\n     */\n    variant?: \"contained\" | \"texted\";\n    /**\n     * Optional. Default is `rounded`.\n     */\n    shape?: \"rounded\" | \"square\" | \"circle\";\n    /**\n     * Pass the `pill` props to make badges more rounded with some additional horizontal padding\n     */\n    pill?: boolean;\n    /**\n     * Optional. Extra Class Name\n     */\n    className?: string;\n}\n\nconst Badge = ({\n    color,\n    variant,\n    shape,\n    pill,\n    children,\n    className,\n    ...restProps\n}: BadgeProps) => {\n    return (\n        <StyledBadge\n            $color={color}\n            $variant={variant}\n            $shape={shape}\n            $pill={pill}\n            className={classnames(className, \"badge\")}\n            {...restProps}\n        >\n            {children}\n        </StyledBadge>\n    );\n};\n\nBadge.defaultProps = {\n    color: \"primary\",\n    variant: \"contained\",\n    shape: \"rounded\",\n};\n\nexport default Badge;\n","import classnames from \"clsx\";\nimport { StyledCardImage } from \"./style\";\nimport { ICardImageProps } from \"./types\";\n\nconst CardImage = ({\n    src,\n    alt,\n    className,\n    isTop,\n    isBottom,\n    ...restProps\n}: ICardImageProps) => {\n    const topClass = isTop ? \"card-img-top\" : \"\";\n    const bottomClass = isBottom ? \"card-img-bottom\" : \"\";\n    return (\n        <StyledCardImage\n            src={src}\n            alt={alt}\n            className={classnames(\n                className,\n                \"card-image\",\n                topClass,\n                bottomClass\n            )}\n            $isTop={isTop}\n            $isBottom={isBottom}\n            {...restProps}\n        />\n    );\n};\n\nexport default CardImage;\n","import classnames from \"clsx\";\nimport { SpaceProps, FlexboxProps } from \"@doar/shared/styled\";\nimport { StyledGroup } from \"./style\";\n\ninterface IGroupProps extends FlexboxProps, SpaceProps {\n    children: React.ReactNode;\n    className?: string;\n    size?: \"sm\";\n}\n\nconst ImageGroup = ({\n    children,\n    className,\n    size,\n    ...restProps\n}: IGroupProps) => {\n    return (\n        <StyledGroup\n            className={classnames(className)}\n            $size={size}\n            {...restProps}\n        >\n            {children}\n        </StyledGroup>\n    );\n};\n\nexport default ImageGroup;\n","import classnames from \"clsx\";\nimport { SpaceProps, LayoutProps } from \"@doar/shared/styled\";\nimport { StyledImage } from \"./style\";\n\nexport interface ImageProps extends SpaceProps, LayoutProps {\n    /**\n     * image's source.\n     */\n    src: string;\n    /**\n     * image's alt text.\n     */\n    alt?: string;\n    /**\n     * image's shapes\n     */\n    shape?: \"rounded\" | \"circle\" | \"thumbnail\";\n\n    /**\n     *Use the `fluid` to scale image nicely to the parent element.\n     */\n    fluid?: boolean;\n    /**\n     *Use the `align` to align image.\n     */\n    align?: \"left\" | \"right\";\n    /**\n     *Use the `fit` to resized to fit image's container.\n     */\n    fit?: \"cover\" | \"contain\";\n    /**\n     * Optional. Extra Class Name\n     */\n    className?: string;\n}\n\nconst Image = ({\n    src,\n    alt,\n    size,\n    shape,\n    fluid,\n    align,\n    fit,\n    className,\n    ...restProps\n}: ImageProps) => {\n    return (\n        <StyledImage\n            src={src}\n            alt={alt}\n            $shape={shape}\n            $size={size}\n            $fluid={fluid}\n            $align={align}\n            $fit={fit}\n            className={classnames(className)}\n            {...restProps}\n        />\n    );\n};\n\nexport default Image;\n","import styled, {\n    FlexboxProps,\n    LayoutProps,\n    SpaceProps,\n    css,\n    device,\n    flexbox,\n    layout,\n    space,\n    themeGet,\n} from '@doar/shared/styled';\n\ninterface ImageProps extends SpaceProps, LayoutProps {\n    $shape?: 'rounded' | 'circle' | 'thumbnail';\n    $fluid?: boolean;\n    $align?: 'left' | 'right';\n    $fit?: 'cover' | 'contain';\n}\n\nconst imageCss = css<ImageProps>`\n    max-width: 100%;\n    ${({ $shape }) =>\n        $shape === 'rounded' &&\n        css`\n            border-radius: ${themeGet('radii.rounded')};\n        `}\n    ${({ $shape }) =>\n        $shape === 'circle' &&\n        css`\n            border-radius: ${themeGet('radii.circle')};\n        `}\n\t${({ $shape }) =>\n        $shape === 'thumbnail' &&\n        css`\n            padding: 0.25rem;\n            background-color: transparent;\n            border: 1px solid ${themeGet('colors.text4')};\n            border-radius: ${themeGet('radii.rounded')};\n        `}\n\t${({ $fluid }) =>\n        $fluid &&\n        css`\n            height: auto;\n        `}\n\t${({ $align }) =>\n        $align === 'left' &&\n        css`\n            float: left;\n        `}\n\t${({ $align }) =>\n        $align === 'right' &&\n        css`\n            float: right;\n        `}\n\t\n\t${({ $fit }) =>\n        $fit === 'cover' &&\n        css`\n            width: 100%;\n            height: 100%;\n            object-fit: cover;\n        `}\n\t${({ $fit }) =>\n        $fit === 'contain' &&\n        css`\n            width: 100%;\n            height: 100%;\n            object-fit: contain;\n        `}\n    ${space};\n    ${layout};\n`;\n\nexport const StyledImage = styled(\n    ({ m, mx, my, ml, mr, mt, mb, maxWidth, maxHeight, width, height, display, ...rest }) => <img {...rest} />\n)<ImageProps>`\n    ${imageCss}\n`;\n\ninterface IGroup extends FlexboxProps, SpaceProps {\n    $size?: 'sm';\n}\n\nconst groupCss = css<IGroup>`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    img {\n        position: relative;\n        background-color: #fff;\n        ${device.small} {\n            padding: 3px;\n        }\n        ${props =>\n            props.theme.name === 'dark' &&\n            css`\n                background-color: ${themeGet('colors.gray900')};\n            `}\n    }\n    ${({ $size }) =>\n        (!$size || $size !== 'sm') &&\n        css`\n            img {\n                &:not(:first-of-type) {\n                    margin-left: -15px;\n                }\n                ${device.small} {\n                    &:not(:first-of-type) {\n                        margin-left: -25px;\n                    }\n                }\n            }\n        `}\n    ${({ $size }) =>\n        $size === 'sm' &&\n        css`\n            img {\n                &:not(:first-of-type) {\n                    margin-left: -15px;\n                }\n            }\n        `}\n    ${props =>\n        props.theme.name === 'dark' &&\n        css`\n            img {\n                background-color: ${themeGet('gray900')};\n            }\n        `}\n    ${flexbox};\n    ${space};\n`;\n\nexport const StyledGroup = styled(({ mb, alignItems, justifyContent, ...rest }) => <div {...rest} />)<IGroup>`\n    ${groupCss};\n`;\n","import styled, { device, themeGet } from \"@doar/shared/styled\";\nimport { Card, CardBody } from \"@doar/components\";\n\nexport const StyledCard = styled(({ ...rest }) => <Card {...rest} />)`\n    border-width: 0;\n    .card-img-top {\n        height: 100px;\n        object-fit: cover;\n    }\n`;\n\nexport const StyledCardBody = styled(({ ...rest }) => <CardBody {...rest} />)`\n    font-size: 13px;\n    padding: 15px;\n    border: 1px solid ${themeGet(\"colors.border\")};\n    border-bottom-right-radius: 0.25rem;\n    border-bottom-left-radius: 0.25rem;\n    ${device.large} {\n        padding: 20px;\n    }\n`;\n\nexport const StyledInner = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    position: relative;\n    margin-top: -55px;\n`;\n\nexport const StyledName = styled.h5`\n    font-size: 14px;\n    margin-top: 15px;\n    margin-bottom: 0;\n    ${device.large} {\n        font-size: 15px;\n    }\n`;\n\nexport const StyledConnections = styled.p`\n    font-size: 12px;\n    color: ${themeGet(\"colors.text3\")};\n    margin-bottom: 25px;\n`;\n","import {\n    CardImage,\n    Anchor,\n    Avatar,\n    AvatarInitial,\n    Text,\n    Button,\n    ImageGroup,\n    Image,\n} from \"@doar/components\";\nimport {\n    StyledCard,\n    StyledCardBody,\n    StyledName,\n    StyledInner,\n    StyledConnections,\n} from \"./style\";\n\ninterface IProps {\n    cover: string;\n    avatar?: string;\n    name: string;\n    members: string;\n    isJoined: boolean;\n    color?: string;\n    path: string;\n    images: string[];\n    connections: number;\n}\n\nconst GroupCard = ({\n    cover,\n    avatar,\n    name,\n    members,\n    isJoined,\n    color,\n    path,\n    images,\n    connections,\n}: IProps) => {\n    return (\n        <StyledCard>\n            <CardImage src={cover} alt=\"card\" isTop />\n            <StyledCardBody>\n                <StyledInner>\n                    <Anchor path={path}>\n                        <Avatar size=\"lg\">\n                            {avatar && <img src={avatar} alt=\"card\" />}\n                            {!avatar && (\n                                <AvatarInitial bg={color}>\n                                    {name.charAt(0)}\n                                </AvatarInitial>\n                            )}\n                        </Avatar>\n                    </Anchor>\n                    <StyledName>\n                        <Anchor path={path} variant=\"link2\">\n                            {name}\n                        </Anchor>\n                    </StyledName>\n                    <Text color=\"text3\">{members} Members</Text>\n                    <ImageGroup mb=\"5px\" size=\"sm\">\n                        {images.map((img) => (\n                            <Image\n                                src={img}\n                                key={img}\n                                alt=\"group\"\n                                width=\"40px\"\n                                height=\"40px\"\n                                shape=\"circle\"\n                            />\n                        ))}\n                    </ImageGroup>\n                    <StyledConnections>\n                        {connections}{\" \"}\n                        {connections > 1 ? \"Connections\" : \"Connection\"}\n                    </StyledConnections>\n                    <Button color={isJoined ? \"primary\" : \"white\"} fullwidth>\n                        {isJoined ? \"Leave Group\" : \"Join\"}\n                    </Button>\n                </StyledInner>\n            </StyledCardBody>\n        </StyledCard>\n    );\n};\n\nexport default GroupCard;\n","import { Row, Col } from \"@doar/components\";\nimport cover1 from \"@doar/shared/images/img26.jpg\";\nimport cover2 from \"@doar/shared/images/img28.jpg\";\nimport cover3 from \"@doar/shared/images/img31.jpg\";\nimport cover4 from \"@doar/shared/images/img34.jpg\";\nimport cover5 from \"@doar/shared/images/img5.jpg\";\nimport groupimg1 from \"@doar/shared/images/img11.jpg\";\nimport groupimg2 from \"@doar/shared/images/img12.jpg\";\nimport groupimg3 from \"@doar/shared/images/img13.jpg\";\nimport groupimg4 from \"@doar/shared/images/img14.jpg\";\nimport groupimg5 from \"@doar/shared/images/img15.jpg\";\nimport groupimg6 from \"@doar/shared/images/img6.jpg\";\nimport groupimg7 from \"@doar/shared/images/img20.jpg\";\nimport groupimg8 from \"@doar/shared/images/img21.jpg\";\nimport groupimg9 from \"@doar/shared/images/img23.jpg\";\nimport groupimg10 from \"@doar/shared/images/img24.jpg\";\nimport GroupCard from \"../../../components/group-card\";\n\nconst MainContent = () => {\n    return (\n        <Col lg={9}>\n            <Row gutters={10}>\n                <Col sm={6} md={4}>\n                    <GroupCard\n                        cover={cover1}\n                        color=\"indigo\"\n                        name=\"Human Resources\"\n                        members=\"1,232,099\"\n                        isJoined={false}\n                        path=\"#!\"\n                        images={[\n                            groupimg1,\n                            groupimg2,\n                            groupimg3,\n                            groupimg4,\n                            groupimg5,\n                        ]}\n                        connections={9}\n                    />\n                </Col>\n                <Col sm={6} md={4} mt={[\"10px\", 0]}>\n                    <GroupCard\n                        cover={cover2}\n                        color=\"dark\"\n                        name=\"UI Designers World\"\n                        members=\"1,055,767\"\n                        isJoined={false}\n                        path=\"#!\"\n                        images={[groupimg1, groupimg2, groupimg3]}\n                        connections={3}\n                    />\n                </Col>\n                <Col sm={6} md={4} mt={[\"10px\", null, 0]}>\n                    <GroupCard\n                        cover={cover3}\n                        color=\"dark\"\n                        name=\"Backend Developers\"\n                        members=\"1,002,005\"\n                        isJoined\n                        path=\"#!\"\n                        images={[groupimg6]}\n                        connections={1}\n                    />\n                </Col>\n                <Col sm={6} md={4} mt=\"10px\">\n                    <GroupCard\n                        cover={cover4}\n                        color=\"teal\"\n                        name=\"Bootstrap Wizards\"\n                        members=\"1,032,292\"\n                        isJoined={false}\n                        path=\"#!\"\n                        images={[groupimg1, groupimg2, groupimg3]}\n                        connections={3}\n                    />\n                </Col>\n                <Col sm={6} md={4} mt=\"10px\">\n                    <GroupCard\n                        cover={cover5}\n                        color=\"teal\"\n                        name=\"SASS Gurus\"\n                        members=\"990,010\"\n                        isJoined={false}\n                        path=\"#!\"\n                        images={[groupimg7, groupimg8]}\n                        connections={2}\n                    />\n                </Col>\n                <Col sm={6} md={4} mt=\"10px\">\n                    <GroupCard\n                        cover={cover5}\n                        color=\"dark\"\n                        name=\"Android Ninjas\"\n                        members=\"988,500\"\n                        isJoined={false}\n                        path=\"#!\"\n                        images={[groupimg9, groupimg10]}\n                        connections={2}\n                    />\n                </Col>\n                <Col sm={6} md={4} mt=\"10px\">\n                    <GroupCard\n                        cover={cover5}\n                        color=\"dark\"\n                        name=\"React Heroes\"\n                        members=\"988,500\"\n                        isJoined\n                        path=\"#!\"\n                        images={[groupimg9, groupimg10, groupimg6]}\n                        connections={3}\n                    />\n                </Col>\n            </Row>\n        </Col>\n    );\n};\n\nexport default MainContent;\n","import styled, { themeGet } from \"@doar/shared/styled\";\n\nexport const StyledName = styled.p`\n    font-weight: 500;\n    margin-bottom: 0px;\n`;\n\nexport const StyledRole = styled.span`\n    font-size: 13px;\n    color: ${themeGet(\"colors.text3\")};\n`;\n","import {\n    Media,\n    MediaBody,\n    Anchor,\n    Avatar,\n    AvatarInitial,\n} from \"@doar/components\";\nimport image1 from \"@doar/shared/images/img26.jpg\";\nimport WidgetTitle from \"../widget-title\";\nimport { StyledName, StyledRole } from \"./style\";\n\nconst PopularGroups = () => {\n    return (\n        <>\n            <WidgetTitle title=\"Popular Groups\" />\n            <Media as=\"ul\" mb=\"15px\">\n                <Media as=\"li\" alignItems=\"center\">\n                    <Anchor path=\"#!\">\n                        <Avatar>\n                            <img src={image1} alt=\"avatar\" />\n                        </Avatar>\n                    </Anchor>\n                    <MediaBody ml=\"15px\">\n                        <StyledName>\n                            <Anchor path=\"#!\" color=\"text\">\n                                Human Resources\n                            </Anchor>\n                        </StyledName>\n                        <StyledRole>1,232,099 Members</StyledRole>\n                    </MediaBody>\n                </Media>\n                <Media as=\"li\" alignItems=\"center\" mt=\"15px\">\n                    <Anchor path=\"#!\">\n                        <Avatar>\n                            <AvatarInitial bg=\"dark\">UI</AvatarInitial>\n                        </Avatar>\n                    </Anchor>\n                    <MediaBody ml=\"15px\">\n                        <StyledName>\n                            <Anchor path=\"#!\" color=\"text\">\n                                UI Designers World\n                            </Anchor>\n                        </StyledName>\n                        <StyledRole>1,055,767 Members</StyledRole>\n                    </MediaBody>\n                </Media>\n                <Media as=\"li\" alignItems=\"center\" mt=\"15px\">\n                    <Anchor path=\"#!\">\n                        <Avatar>\n                            <AvatarInitial bg=\"gray500\">B</AvatarInitial>\n                        </Avatar>\n                    </Anchor>\n                    <MediaBody ml=\"15px\">\n                        <StyledName>\n                            <Anchor path=\"#!\" color=\"text\">\n                                Backend Developers\n                            </Anchor>\n                        </StyledName>\n                        <StyledRole>1,002,005 Members</StyledRole>\n                    </MediaBody>\n                </Media>\n                <Media as=\"li\" alignItems=\"center\" mt=\"15px\">\n                    <Anchor path=\"#!\">\n                        <Avatar>\n                            <AvatarInitial bg=\"indigo\">B</AvatarInitial>\n                        </Avatar>\n                    </Anchor>\n                    <MediaBody ml=\"15px\">\n                        <StyledName>\n                            <Anchor path=\"#!\" color=\"text\">\n                                Bootstrap Wizards\n                            </Anchor>\n                        </StyledName>\n                        <StyledRole>1,032,292 Members</StyledRole>\n                    </MediaBody>\n                </Media>\n                <Media as=\"li\" alignItems=\"center\" mt=\"15px\">\n                    <Anchor path=\"#!\">\n                        <Avatar>\n                            <AvatarInitial bg=\"pink\">B</AvatarInitial>\n                        </Avatar>\n                    </Anchor>\n                    <MediaBody ml=\"15px\">\n                        <StyledName>\n                            <Anchor path=\"#!\" color=\"text\">\n                                SASS Gurus\n                            </Anchor>\n                        </StyledName>\n                        <StyledRole>990,010 Members</StyledRole>\n                    </MediaBody>\n                </Media>\n            </Media>\n        </>\n    );\n};\n\nexport default PopularGroups;\n","import { Badge, Nav, NavLink } from \"@doar/components\";\nimport WidgetTitle from \"../widget-title\";\n\nconst GroupsByPosition = () => {\n    return (\n        <>\n            <WidgetTitle title=\"Groups By Position\" />\n            <Nav customStyle=\"classic\">\n                <NavLink path=\"#!\">\n                    <span>Software Engineer</span>\n                    <Badge variant=\"texted\">20</Badge>\n                </NavLink>\n                <NavLink path=\"#!\">\n                    <span>UI/UX Designer</span>\n                    <Badge variant=\"texted\">18</Badge>\n                </NavLink>\n                <NavLink path=\"#!\">\n                    <span>Sales Representative</span>\n                    <Badge variant=\"texted\">14</Badge>\n                </NavLink>\n                <NavLink path=\"#!\">\n                    <span>Product Representative</span>\n                    <Badge variant=\"texted\">12</Badge>\n                </NavLink>\n                <NavLink path=\"#!\">\n                    <span>Full-Stack Developer</span>\n                    <Badge variant=\"texted\">10</Badge>\n                </NavLink>\n            </Nav>\n        </>\n    );\n};\n\nexport default GroupsByPosition;\n","import { Badge, Nav, NavLink } from \"@doar/components\";\nimport WidgetTitle from \"../widget-title\";\n\nconst GroupsByLocation = () => {\n    return (\n        <>\n            <WidgetTitle title=\"Groups By Location\" />\n            <Nav customStyle=\"classic\">\n                <NavLink path=\"#!\">\n                    <span>San Francisco, California</span>\n                    <Badge variant=\"texted\">20</Badge>\n                </NavLink>\n                <NavLink path=\"#!\">\n                    <span>Los Angeles, California</span>\n                    <Badge variant=\"texted\">18</Badge>\n                </NavLink>\n                <NavLink path=\"#!\">\n                    <span>Las Vegas, Nevada</span>\n                    <Badge variant=\"texted\">14</Badge>\n                </NavLink>\n                <NavLink path=\"#!\">\n                    <span>Austin, Texas</span>\n                    <Badge variant=\"texted\">12</Badge>\n                </NavLink>\n                <NavLink path=\"#!\">\n                    <span>Arlington, Nebraska</span>\n                    <Badge variant=\"texted\">10</Badge>\n                </NavLink>\n            </Nav>\n        </>\n    );\n};\n\nexport default GroupsByLocation;\n","import styled from \"@doar/shared/styled\";\n\nexport const StyledWrap = styled.div`\n    &:not(:last-of-type) {\n        margin-bottom: 50px;\n    }\n`;\n","import { Col } from \"@doar/components\";\nimport PopularGroups from \"../../../components/widgets/popular-groups\";\nimport GroupsByPosition from \"../../../components/widgets/groups-by-position\";\nimport GroupsByLocation from \"../../../components/widgets/groups-by-location\";\nimport { StyledWrap } from \"./style\";\n\nconst Sidebar = () => {\n    return (\n        <Col lg={3} mt={[\"40px\", null, null, \"0px\"]}>\n            <StyledWrap>\n                <PopularGroups />\n            </StyledWrap>\n            <StyledWrap>\n                <GroupsByPosition />\n            </StyledWrap>\n            <StyledWrap>\n                <GroupsByLocation />\n            </StyledWrap>\n        </Col>\n    );\n};\n\nexport default Sidebar;\n","import { Row } from \"@doar/components\";\nimport Content from \"../layouts/content\";\nimport PageHeader from \"../components/page-header\";\nimport MainContent from \"../containers/groups/main\";\nimport Sidebar from \"../containers/groups/sidebar\";\nimport SEO from \"../components/seo\";\n\nconst Groups = () => {\n    return (\n        <>\n            <SEO />\n            <Content borderBottomWidth=\"1px\">\n                <PageHeader\n                    prev={[\n                        { text: \"Profile\", link: \"/profile-view\" },\n                        { text: \"Discover\", link: \"/\" },\n                    ]}\n                    title=\"Groups\"\n                    wcText=\"Discover Groups\"\n                />\n            </Content>\n            <Content mt={[null, null, null, \"0px\"]}>\n                <Row>\n                    <MainContent />\n                    <Sidebar />\n                </Row>\n            </Content>\n        </>\n    );\n};\n\nexport default Groups;\n"],"names":["props","badgeCss","css","themeGet","$color","$variant","$pill","$shape","StyledBadge","styled","withConfig","shouldForwardProp","prop","defaultValidatorFn","includes","space","Badge","color","variant","shape","pill","children","className","restProps","classnames","defaultProps","src","alt","isTop","isBottom","topClass","bottomClass","$isTop","$isBottom","size","$size","fluid","align","fit","$fluid","$align","$fit","imageCss","layout","StyledImage","m","mx","my","ml","mr","mt","mb","maxWidth","maxHeight","width","height","display","rest","groupCss","device","theme","name","flexbox","StyledGroup","alignItems","justifyContent","StyledCard","StyledCardBody","StyledInner","StyledName","StyledConnections","cover","avatar","members","isJoined","path","images","connections","bg","charAt","map","img","fullwidth","lg","gutters","sm","md","cover1","groupimg1","groupimg2","groupimg3","groupimg4","groupimg5","cover2","cover3","groupimg6","cover4","cover5","groupimg7","groupimg8","groupimg9","groupimg10","StyledRole","title","as","image1","customStyle","StyledWrap","borderBottomWidth","prev","text","link","wcText"],"sourceRoot":""}